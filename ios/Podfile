platform :ios, '14.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  abort 'Run flutter pub get first.' unless File.exist?(generated)
  File.foreach(generated) { |l| return $1.strip if l =~ /FLUTTER_ROOT=(.*)/ }
end
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)
flutter_ios_podfile_setup

# -------- Main Flutter app target ---------------------------------
target 'Runner' do
  use_frameworks!        # <— dynamic frameworks
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  pod 'FirebaseFirestore',
      :git => 'https://github.com/invertase/firestore-ios-sdk-frameworks.git',
      :tag => '11.4.0'
end

# -------- Notification Service Extension --------------------------
target 'ImageNotification' do
  use_frameworks!         # <— dynamic frameworks
  use_modular_headers!

  pod 'Firebase/Messaging'
  pod 'GoogleUtilities'
end

# -------- Post-install: Swift & deployment target -----------------
post_install do |installer|
  # 1. Pods targets: Swift & deployment + add Flutter headers
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |c|
      c.build_settings['SWIFT_VERSION']              = '5.0'
      c.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'

      # --- ⬇︎ ADD THESE TWO LINES ⬇︎ ---
      headers = c.build_settings['HEADER_SEARCH_PATHS'] || ['$(inherited)']
      headers << '"${PODS_ROOT}/Flutter/engine"' unless headers.include?('"${PODS_ROOT}/Flutter/engine"')
      c.build_settings['HEADER_SEARCH_PATHS'] = headers
      # --- ⬆︎ ADD THESE TWO LINES ⬆︎ ---
    end
  end

  # 2. User targets (Runner, ImageNotification) stay the same …
  installer.aggregate_targets.each do |agg|
    agg.user_project.native_targets.each do |nt|
      next unless %w[Runner ImageNotification].include?(nt.name)
      nt.build_configurations.each do |cfg|
        cfg.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
        cfg.build_settings['TARGETED_DEVICE_FAMILY']     = '1,2'
      end
    end
    agg.user_project.save
  end
end